# {{ ansible_managed | comment }}
# # Configuration of JArchiveSigner WORKERGENID{{ item.id }}. 
#

## General properties

WORKERGENID{{ item.id }}.TYPE=PROCESSABLE
WORKERGENID{{ item.id }}.IMPLEMENTATION_CLASS=org.signserver.module.jarchive.signer.JArchiveSigner

WORKERGENID{{ item.id }}.NAME={{ item.name }}
# Authentication. One of NOAUTH, CLIENTCERT, org.signserver.server.UsernamePasswordAuthorizer, org.signserver.server.UsernameAuthorizer
WORKERGENID{{ item.id }}.AUTHTYPE={{ item.AuthType }}

# Crypto token: CryptoTokenP12, CryptoTokenP11, CryptoTokenP11NG1, CryptoTokenP11NG1KeyWrapping
WORKERGENID{{ item.id }}.CRYPTOTOKEN={{ item.CryptoToken }}

# Using key from sample keystore
WORKERGENID{{ item.id }}.DEFAULTKEY={{ item.DefaultKey }}
# Key using ECDSA
#WORKERGENID{{ item.id }}.DEFAULTKEY=code00002

# Allow peering with EJBCA
WORKERGENID{{ item.id }}.PEERS_VISIBLE={{ item.peer_enable |default('true') }}

# Signature algorithm
# Default: SHA256withRSA
# Values: SHA1withRSA, SHA256withRSA
WORKERGENID{{ item.id }}.SIGNATUREALGORITHM={{ item.SignatureAlgorithm }}

# Algorithm for message digests
# Default: SHA-256
# Values: SHA1, SHA-256
WORKERGENID{{ item.id }}.DIGESTALGORITHM={{ item.DigestAlgorithm |default('SHA-256') }}

# If the file entry data should be aligned
# Default: false
# Values: true, false
WORKERGENID{{ item.id }}.ZIPALIGN={{ item.ZipAlign |default('false') }}

# If existing signature files should be kept
# Default: true
# Values: true, false
WORKERGENID{{ item.id }}.KEEPSIGNATURES={{ item.KeepSignatures |default('true') }}

# If an existing signature with the same name should be overwritten and not fail with an error.
# Default: true
# Values: true, false
WORKERGENID{{ item.id }}.REPLACESIGNATURE={{ item.ReplaceSignature }}

# What type of signature name to use
# Default: KEYALIAS
#WORKERGENID{{ item.id }}.SIGNATURE_NAME_TYPE=KEYALIAS
#WORKERGENID{{ item.id }}.SIGNATURE_NAME_VALUE=
#WORKERGENID{{ item.id }}.SIGNATURE_NAME_TYPE=VALUE
#WORKERGENID{{ item.id }}.SIGNATURE_NAME_VALUE=CERT
{% if item.Signature_Name_Type is defined and item.Signature_Name_Type|length %}
WORKERGENID{{ item.id }}.SIGNATURE_NAME_TYPE={{ item.Signature_Name_Type }}
{% endif %}
{% if item.Signature_Name_Value is defined and item.Signature_Name_Value|length %}
WORKERGENID{{ item.id }}.SIGNATURE_NAME_VALUE={{ item.Signature_Name_Value }}
{% endif %}

# Worker ID or name of internal (RFC#3161) timestamp signer in the same SignServer
# Default: none
#WORKERGENID{{ item.id }}.TSA_WORKER=TimeStampSigner
{% if item.Tsa_Worker is defined and item.Tsa_Worker|length %}
WORKERGENID{{ item.id }}.TSA_WORKER={{ item.Tsa_Worker }}
{% endif %}
# URL of external (RFC#3161) timestamp authority
# Default: none
#WORKERGENID{{ item.id }}.TSA_URL=http://tsa.example.com/TimeStampSigner
{% if item.Tsa_Url is defined and item.Tsa_Url|length %}
WORKERGENID{{ item.id }}.TSA_URL={{ item.Tsa_Url }}
{% endif %}

# Username for authentication with the TSA
# Default: none
WORKERGENID{{ item.id }}.TSA_USERNAME=

# Password for authentication with the TSA
# Default: none
WORKERGENID{{ item.id }}.TSA_PASSWORD=

# Time-stamping policy OID to request from the TSA
# Default: none
{% if item.TsaPolicyOid is defined and item.TsaPolicyOid|length %}
WORKERGENID{{ item.id }}.TSA_POLICYOID={{ item.TsaPolicyOid }}
{% endif %}

# Digest algorithm used for timestamps
# Default: SHA-256
WORKERGENID{{ item.id }}.TSA_DIGESTALGORITHM={{ item.Tsa_DigestAlgorithm |default('SHA-256') }}

# If a digest of the request should be computed and logged
# Default: true
# Values: true, false
WORKERGENID{{ item.id }}.DO_LOGREQUEST_DIGEST={{ item.Do_LogRequest_Digest |default('true') }}

# The digest algorithm to use for the request in the log
# Default: SHA256
WORKERGENID{{ item.id }}.LOGREQUEST_DIGESTALGORITHM={{ item.LogRequest_DefaultAlgorithm |default('SHA256') }}

# If a digest of the response should be computed and logged
# Default: true
# Values: true, false
WORKERGENID{{ item.id }}.DO_LOGRESPONSE_DIGEST={{ item.Do_LogResponse_Digest |default('true') }}

# The digest algorithm to use for the request in the log
# Default: SHA256
WORKERGENID{{ item.id }}.LOGRESPONSE_DIGESTALGORITHM={{ item.LogResponse_DigestAlgorithm |default('SHA256') }}

# If the key usage counter is disabled
WORKERGENID{{ item.id }}.DISABLEKEYUSAGECOUNTER={{ item.DisableKeyUsageCounter |default('true') }}