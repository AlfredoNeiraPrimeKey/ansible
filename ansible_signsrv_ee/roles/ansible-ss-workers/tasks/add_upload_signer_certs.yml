---

- name: Check if {{ p11_item.name }} worker exists
  command: "{{ signsrv_home }}/bin/signserver getproperty {{ p11_item.name }} SIGNERCERT"
  args:
    chdir: "{{ signsrv_home }}"
  environment:
    APPSRV_HOME: "{{ wildfly_home }}"
  become: yes
  become_user: "{{ signsrv_user }}"
  register: check_signer_cert
  failed_when: false
  changed_when: false

- name: Upload certificate & CA chain to worker
  block:

    - name: Copy {{ p11_item.name }}.crt certificate & CA chain file from Controller
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ signsrv_user }}"
        group: "{{ signsrv_group }}"
      loop:
        - { src: "{{ ejbca_csr_dir_output }}/{{ p11_item.name }}.crt", dest: "{{ identity_batch_output_dir }}/{{ p11_item.name }}.crt" }
        - { src: "{{ ejbca_csr_dir_output }}/{{ p11_item.name }}-fullchain.crt", dest: "{{ identity_batch_output_dir }}/{{ p11_item.name }}-fullchain.crt" }
      loop_control:
        label: "{{ item.src }}"
      register: file_copy_crt

    #- name: Add { p11_item.name }}-fullchain.crt to the {{ p11_item.name }}.crt
    #  shell: "cat /var/tmp/{{ p11_item.name }}-fullchain.crt >> {{ identity_batch_output_dir }}/{{ p11_item.name }}.crt"
    #  become: yes
    #  become_user: "{{ signsrv_user }}"

    - name: Import {{ p11_item.name }} certificate into worker
      command: "{{ signsrv_home }}/bin/signserver uploadsignercertificate {{ p11_item.name }} GLOB {{ identity_batch_output_dir }}/{{ p11_item.name }}.crt"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      register: upload_signer_cert

    - name: Import {{ p11_item.name }} CA chain into worker
      command: "{{ signsrv_home }}/bin/signserver uploadsignercertificatechain {{ p11_item.name }} GLOB {{ identity_batch_output_dir }}/{{ p11_item.name }}-fullchain.crt"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      register: upload_signer_cert

    - name: Reload {{ p11_item.name }} worker
      command: "{{ signsrv_home }}/bin/signserver reload {{ p11_crypto_tokens[0].name }}"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"

    - name: Cleanup {{ p11_item.name }} certificate files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ identity_batch_output_dir }}/{{ p11_item.name }}.crt"
        - "{{ identity_batch_output_dir }}/{{ p11_item.name }}-fullchain.crt"

  when: check_signer_cert.rc != 0
