# {{ ansible_managed | comment }}
# Configuration of TimeStampSigner WORKERGENID{{ item.id }}.
#

## General properties
WORKERGENID{{ item.id }}.TYPE=PROCESSABLE
WORKERGENID{{ item.id }}.IMPLEMENTATION_CLASS=org.signserver.module.tsa.TimeStampSigner

WORKERGENID{{ item.id }}.NAME={{ item.name }}

# Authentication. One of NOAUTH, CLIENTCERT, org.signserver.server.UsernamePasswordAuthorizer, org.signserver.server.UsernameAuthorizer
WORKERGENID{{ item.id }}.AUTHTYPE={{ item.AuthType }}

# Crypto token: CryptoTokenP12, CryptoTokenP11, CryptoTokenP11NG1, CryptoTokenP11NG1KeyWrapping
WORKERGENID{{ item.id }}.CRYPTOTOKEN={{ item.CryptoToken }}


# Using key from keystore
WORKERGENID{{ item.id }}.DEFAULTKEY={{ item.DefaultKey }}
# Key using ECDSA
#WORKERGENID{{ item.id }}.DEFAULTKEY=ts00002

# Allow peering with EJBCA
WORKERGENID{{ item.id }}.PEERS_VISIBLE={{ item.peer_enable |default('true') }}

# Check validity period of the certificate will be verified before processing. Default true.
WORKERGENID{{ item.id }}.CHECKCERTVALIDITY={{ item.CheckCertValidity |default('true') }}

# Check validity of the PrivateKeyUsagePeriod in the certificate will be verified before processing if it is present. Default true.
WORKERGENID{{ item.id }}.CHECKCERTPRIVATEKEYVALIDITY={{ item.CheckCertPrivateKeyValidity |default('true') }}

# Check the minimum remaining days of the signing certificate before expiration. 0 means disable. Default 0.
WORKERGENID{{ item.id }}.MINREMAININGCERTVALIDITY={{ item.MinRemainingCertValidity |default('0') }}

# Sets how many signatures that are allowed to be created with the same key by this worker. Default is -1 (no limit).
# The counter is per key so if multiple workers share the same key they will all increment the counter.
WORKERGENID{{ item.id }}.KEYUSAGELIMIT={{ item.KeyUsageLimit |default('-1') }}

## Archiving properties

# Using the base 64 archiver
#WORKERGENID{{ item.id }}.ARCHIVERS=org.signserver.server.archive.base64dbarchiver.Base64DatabaseArchiver

# Using the old database archiver
#WORKERGENID{{ item.id }}.ARCHIVERS=org.signserver.server.archive.olddbarchiver.OldDatabaseArchiver

# Archiving only requests
#WORKERGENID{{ item.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=REQUEST

# Archiving only responses
#WORKERGENID{{ item.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=RESPONSE

# Archiving both requests and responses
#WORKERGENID{{ item.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=REQUEST_AND_RESPONSE

# Store forwarded address (from the X-Forwarded-For header) as the request address
#WORKERGENID{{ item.id }}.ARCHIVER0.USE_FORWARDED_ADDRESS=true

# Include additional forwarded addresses (apart from the last), only applies if the property above is set
#WORKERGENID{{ item.id }}.ARCHIVER0.MAX_FORWARDED_ADDRESSES=3

# Included direct (non-forwarded address) at the end of forwarded addresses
#WORKERGENID{{ item.id }}.ARCHIVER0.INCLUDE_DIRECT_ADDRESS=true

## TSA properties

# Required. The default policy ID of the time stamp authority. If no policy OID is specified in the request then will this value be used.
WORKERGENID{{ item.id }}.DEFAULTTSAPOLICYOID={{ item.DefaultTsaPolicyOid }}

# Recommended. A ';' separated string containing accepted algorithms, can be null if it shouldn't be used.
# Supported Algorithms are: GOST3411, MD5, SHA1, SHA224, SHA256, SHA384, SHA512, RIPEMD128, RIPEMD160, RIPEMD256
#WORKERGENID{{ item.id }}.ACCEPTEDALGORITHMS=SHA1;SHA224;SHA256;SHA384;SHA512

# Recommended. A ';' separated string containing accepted policies, can be null if it shouldn't be used.
{% if item.AcceptedPolicies is defined and item.AcceptedPolicies|length %}
WORKERGENID{{ item.id }}.ACCEPTEDPOLICIES={{ item.AcceptedPolicies }}
{% endif %}

# Accept any requested policy (must be set if not setting ACCEPTEDPOLICIES)
# can optionally be set to false or empty value when setting ACCEPTEDPOLICIES for clarity
WORKERGENID{{ item.id }}.ACCEPTANYPOLICY={{ item.AcceptAnyPolicy }}
#WORKERGENID{{ item.id }}.ACCEPTANYPOLICY=false
#WORKERGENID{{ item.id }}.ACCEPTANYPOLICY=

# Optional. A ';' separated string containing accepted extensions, can be null if it shouldn't be used.
#WORKERGENID{{ item.id }}.ACCEPTEDEXTENSIONS=

# Optional. Class implementing the ITimeSource.
#WORKERGENID{{ item.id }}.TIMESOURCE=org.signserver.server.LocalComputerTimeSource

# Optional. The signature algorithm to use.
WORKERGENID{{ item.id }}.SIGNATUREALGORITHM={{ item.SignatureAlgorithm |default('SHA256WithRSA') }}

# Optional. Accuracy defines how good the time source is. Only one of the accuracy properties should be set.
#WORKERGENID{{ item.id }}.ACCURACYMICROS=500
#WORKERGENID{{ item.id }}.ACCURACYMILLIS=500
#WORKERGENID{{ item.id }}.ACCURACYSECONDS=1

# Optional. The GeneralName of the Time Stamp Authority.
#WORKERGENID{{ item.id }}.TSA=CN=...

# Optional. Set the GeneralName of the Time Stamp Authority from the subject DN of the signing
# certificate. This can not be set if the TSA property above is set
#WORKERGENID{{ item.id }}.TSA_FROM_CERT=true

# Optional. Perform an extra check that the SIGNERCERTCHAIN only contains certificates in the chain of the signer certificate
#WORKERGENID{{ item.id }}.REQUIREVALIDCHAIN=true

# The maximum size (in bytes) used when generating serial numbers (default 8)
#WORKERGENID{{ item.id }}.MAXSERIALNUMBERLENGTH=16

# Optional. Specifies if the status string is to be included in the response. Setting this to true triggers a bug in some versions of OpenJDK's jarsigner utility. Default true.
#WORKERGENID{{ item.id }}.INCLUDESTATUSSTRING=false

# Optional. Specifies if the signingTime signed CMS attribute should be included in the response. Default true.
#WORKERGENID{{ item.id }}.INCLUDESIGNINGTIMEATTRIBUTE=false

# If the key usage counter is disabled
WORKERGENID{{ item.id }}.DISABLEKEYUSAGECOUNTER={{ item.DisableKeyUsageCounter |default('true') }}

# Whether timestamp token signature is to be validated after signing. Default true.
WORKERGENID{{ item.id }}.VERIFY_TOKEN_SIGNATURE={{ item.Verify_Token_Signature }}
#WORKERGENID{{ item.id }}.VERIFY_TOKEN_SIGNATURE=
#WORKERGENID{{ item.id }}.VERIFY_TOKEN_SIGNATURE=false