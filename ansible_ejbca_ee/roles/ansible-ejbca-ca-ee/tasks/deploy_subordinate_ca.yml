---

- name: Test that HSM slots are available
  include_tasks: hsm_test.yml
  loop: "{{ test_hsm_slots }}"
  loop_control:
    label: "{{ item.slot_identifier }}"
  no_log: true
  tags: hsm_test
  when: test_hsm_slots[0] is defined

- name: Generate HSM keys
  include_tasks: clienttoolbox_key_generation.yml
  loop: "{{ generate_hsm_keys }}"
  loop_control:
    label: "{{ item.slot_identifier }}"
  no_log: true
  tags: clienttoolbox_key_generation
  when: generate_hsm_keys[0] is defined

- name: Check deployment
  include_tasks: check_deployment.yml
  tags: check_deployment
  when: add_certification_authorities[0] is defined or management_add_end_entities[0] is defined or management_add_administrators[0] is defined

- name: Prepare configdump template files
  include_tasks: config_configdump.yml
  when:
    - configdump_directory_structure is defined
    - configdump_import_files is defined

- name: Use Configdump to create the CA's
  block:

    - name: Create crypto tokens for Policy/Sub/Management CA's
      include_tasks: add_crypto_token.yml
      loop: "{{ add_certification_authorities }}"
      no_log: true

    - name: Stage CA template to create with configdump
      template:
        src: ca-template.yml.j2
        dest: "{{ ejbca_home }}/dump/subs/certification-authorities/{{ item.caname }}.yaml"
        owner: "{{ ejbca_user }}"
        group: "{{ ejbca_group }}"
        mode: 0664
      loop: "{{ add_certification_authorities }}"
      no_log: true

    - name: Import External CA's
      include_tasks: add_external_root_ca.yml
      loop: "{{ add_certification_authorities }}"
      no_log: true
      when: item.rootDn == "External"
      
    - name: Intialize Policy/Sub/Management CA's with configdump
      command: "./dist/configdump/configdump.sh import  --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/subs --initialize"
      args:
        chdir: "{{ ejbca_home }}"
      become: yes 
      become_user: "{{ ejbca_user }}"

    - name: Cleanup configdump files for subs
      file:
        path: "{{ ejbca_home }}/dump/subs"
        state: absent

  when: 
    - add_certification_authorities[0] is defined
    - deploy_with_configdump|bool 

- name: Use CLI to create the CA's
  block:

    - name: Initialize Policy or Subordinate CAs with CLI commands
      include_tasks: init_ca.yml
      loop: "{{ add_certification_authorities }}"
      loop_control:
        label: "{{ item.caname }}"
      no_log: true
      tags: create_cas

    - name: Configure Sub CA's settings
      include_tasks: config_ca_extensions.yml
      loop: "{{ add_certification_authorities }}"
      no_log: true
      tags: configure_cas_extentions
      when: item.rootDn != "External"
  
  when: 
    - add_certification_authorities[0] is defined
    - not deploy_with_configdump|bool

- name: Copy CA CSRs to the Ansible Controller 
  include_tasks: copy_csr_local.yml
  loop: "{{ add_certification_authorities }}"
  no_log: true
  tags: create_cas
  when: 
    - add_certification_authorities[0] is defined
    - item.rootDn == "External"
