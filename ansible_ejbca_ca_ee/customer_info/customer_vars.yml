---

organizationName: Solitude
organizationNameShort: "{{ organizationName }}"
organizationNameCRL: "{{ organizationName }}"
organizationDomainName: solitude.skyrim
countryName: US
superAdminCn: "10Sep2020-Skyrim-SA"
sharedVarsLocation: ~/ansible/ansibleCacheDir

# If enabled this will configure a publisher for OCSP, OCSP signer key update service, OSCP publishing queue, OCSP publisher to the certificate profiles,
# create Peer connection, and create an auth key binding
use_external_va: true

# If enabled this will configure a Peer connection, and add the RA Peer role to EJBCA 
use_external_ra: true

# If enabled configures a Peer connectiona nd key binding for Sign Server
use_external_ss: true

wildfly_version: 20.0.1.Final
wildfly_standalone_file: standalone-20.xml.datasource.j2
wildfly_disable_infinispan: true

mariadb_root_password:  "{{ encrypted_database_rootuser_password | default('PrimeKeyPkI4all') }}"
mariadb_binlog_formatt: ROW
mariadb_databases:
  - name: ejbca
    collation: "utf8_general_ci"
    encoding: "utf8"
mariadb_users:
  - name: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    priv: "ejbca.*:ALL"
    host: "%"
  - name: ejbca-usr
    password: ejbca
    priv: "ejbca.*:ALL"
    host: "localhost"

ejbca_version: 7.4.2
ejbca_software_url: http://172.16.170.133:8080/ejbca/ejbca_ee_7_4_2.zip
ejbca_src_dir_name: ejbca_ee_7_4_2
ejbca_jdbc_driver: https://downloads.mariadb.com/Connectors/java/connector-java-2.5.4/mariadb-java-client-2.5.4.jar

appsrv_datasources:
  - jndi_name: "java:/EjbcaDS"
    pool_name: ejbcads
    host: 127.0.0.1
    port: 3306
    database: ejbca
    user: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"

ejbca_cli_defaultpassword: "{{ encrypted_ejbca_cli_password | default('ejbca') }}"
ejbca_ca_cmskeystorepass: "{{ encrypted_ejbca_ca_cmskeystorepass | default('ejbca') }}"

management_add_end_entities:
  - username: "SkryimSuperAdministrator"
    dn: "C={{ countryName }},O={{ organizationName }},OU=Administrators,CN={{ superAdminCn }}"
    caname: "ManagementCA"
    token: "P12"
    password: "{{ encrypted_superadmin_enrollment_code | default('foo123') }}"
    certprofile: adminMgmtCA
    eeprofile: AdminInternal  

management_add_administrators:
  - role: "Super Administrator Role"
    caname: "ManagementCA"
    match_with: "WITH_COMMONNAME"
    match_value: "{{ superAdminCn }}"

ejbca_peer_crypto_token:
  - name: peeringCryptoToken
    slot_label: KeyBinding_SLOT
    slot_identifier_type: "SLOT_LABEL"
    type: PKCS11CryptoToken
    slot_index: 0
    slot_pin: "{{ encrypted_peerKeyBinding_token_pin | default('foo123') }}"
    slot_identifier: "SLOT_LABEL:KeyBinding_SLOT"
    ocsp_key_size: "3072"
    ocsp_key_label: peerKeyBindingOcsp0001
    ra_key_size: "3072"
    ra_key_label: peerKeyBindingRa0001
    sign_key_size: "3072"
    sign_key_label: peerKeyBindingSign0001

ejbca_keybinding:
  - name: peerClient-ocsp
    crypto_token_name: peeringCryptoToken
    key_label: "{{ ejbca_peer_crypto_token[0].ocsp_key_label }}"
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},OU=Peering,O={{ organizationName }},CN=peerClient-ocsp"
    caname: "ManagementCA"
    token: "USERGENERATED"
    password: "{{ encrypted_keybind_enrollment_code | default('foo123') }}"
    certprofile: tlsPeerConnector
    eeprofile: tlsPeerConnMgmt
    useType: ocsp
    enabled: "{{ use_external_va }}"
  - name: peerClient-ra
    crypto_token_name: peeringCryptoToken
    key_label: "{{ ejbca_peer_crypto_token[0].ra_key_label }}"
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},OU=Peering,O={{ organizationName }},CN=peerClient-ra"
    caname: "ManagementCA"
    token: "USERGENERATED"
    password: "{{ encrypted_keybind_enrollment_code | default('foo123') }}"
    certprofile: tlsPeerConnector
    eeprofile: tlsPeerConnMgmt
    useType: ra
    enabled: "{{ use_external_ra }}"
  - name: peerClient-sign
    crypto_token_name: peeringCryptoToken
    key_label: "{{ ejbca_peer_crypto_token[0].sign_key_label }}"
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},OU=Peering,O={{ organizationName }},CN=peerClient-sign"
    caname: "ManagementCA"
    token: "USERGENERATED"
    password: "{{ encrypted_keybind_enrollment_code | default('foo123') }}"
    certprofile: tlsPeerConnector
    eeprofile: tlsPeerConnMgmt
    useType: sign
    enabled: "{{ use_external_ss }}"

httpd_identity_info:
  id_dn: "ou=Devices,O={{ organizationName }},C={{ countryName }}"
  id_name: "ca01.{{ organizationDomainName }}"
  id_full_dn: "C={{ countryName }},O={{ organizationName }},OU=Devices,CN=ca01.{{ organizationDomainName }}"
  id_username: ca_httpd_tls
  id_password: "{{ encrypted_httpd_identity_password | default('foo123') }}"
  id_altname: "dNSName=ca01.{{ organizationDomainName }}, dNSName=ca.{{ organizationDomainName }}, dNSName=sapi.ca.{{ organizationDomainName }}, dNSName=api.ca.{{ organizationDomainName }}"
  id_certprofile: tlsServerClientAuth
  id_eeprofile: "tlsServer{{ organizationName }}"
  id_caname: "{{ organizationName }}-Sub-CA"

# Add the management CA to HTTP trust chain file. 
add_mgmt_ca: true

ejbca_peerConnector:
  - name: OCSP-01
    url: "https://ocsp01.{{ organizationDomainName }}/ejbca/peer/v1"
    keybinding: "{{ ejbca_keybinding[0].name }}"
    type: ocsp
    enabled: "{{ use_external_va }}"
  - name: RA-01
    url: "https://ra01.{{ organizationDomainName }}/ejbca/peer/v1"
    keybinding: "{{ ejbca_keybinding[1].name }}"
    type: ra
    enabled: "{{ use_external_ra }}"
  - name: Sign-01
    url: "https://sign01.{{ organizationDomainName }}/signserver/peer/v1"
    keybinding: "{{ ejbca_keybinding[2].name }}"
    type: sign
    enabled: "{{ use_external_ss }}" 

# List of certification authorities that should be added using CLI
# caname: CA name
# certprofile: Certificate profile
# dn: CA distinguished name
# subjectaltname: CA subject alt name
# validity: Validity time or end date
# policy: "null" or policy oid
# keytype: RSA, DSA or ECDSA
# keyspec: Size of RSA keys, size of DSA keys or name of curve for ECDSA keys
# signalg: Signature algorithm
# tokentype: "soft" or "org.cesecore.keys.token.PKCS11CryptoToken"
# tokenpass: Password for the CA token
# pkcs11_token: Dict of parameters needed for PKCS11 token
# slot_identifier_type: "SLOT_LABEL", "SLOT_INDEX" or "SLOT_NUMBER"
# slot_identifier_value: Slot identifier
# signkey_label: Signing key label
# defaultkey_label: Default (encryption) key label
# testkey_label: Test key label
# The order must be Management CA and then Root CA
management_add_certification_authorities:
  - caname: "ManagementCA"
    certprofile: "managementCA"
    dn: "CN=ManagementCA,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    subjectaltname: ""
    validity: "3650"
    validity_yml: "10y"
    policy: "null"
    keytype: "RSA"
    keyspec: "3072"
    signalg: "SHA384WithRSA"
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_mgmtca_token_pin | default('foo123') }}"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationName | lower }}-mgmtca.crl"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/CertsIssuedTo{{ organizationName }}-mgmtca.p7b"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/CertsIssuedTo{{ organizationName }}-mgmtca.p7b"
    crlPeriod: 259200000
    crlIssueInterval: 86400000
    useLdapDnOrder: false
    pkcs11_token:
      slot_identifier_type: "SLOT_LABEL"
      slot_identifier_value: "Management_CA_SLOT"
      signkey_label: "signKey00001"
      defaultkey_label: "defaultKey0001"
      testkey_label: "testKey"
  - caname: "{{ organizationNameShort }}-Root-CA"
    certprofile: "RootCA-{{ organizationNameShort }}-G1"
    dn: "CN={{ organizationName }} Root CA G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    subjectaltname: ""
    validity: "9125"
    validity_yml: "25y"
    policy: "null"
    keytype: "RSA"
    keyspec: "4096"
    signalg: "SHA512WithRSA"
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_rootca_token_pin | default('foo123') }}"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort | lower }}-rootca-g1.crl"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-RootCAG1.p7b"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-RootCAG1.p7b"
    crlPeriod: 15552000000
    crlIssueInterval: 0
    useLdapDnOrder: false
    pkcs11_token:
      slot_identifier_type: "SLOT_LABEL"
      slot_identifier_value: "Root_CA_SLOT"
      signkey_label: "signKey00001"
      defaultkey_label: "defaultKey0001"
      testkey_label: "testKey"

# List of certification authorities that should be added using CLI
# caname: CA name
# certprofile: Certificate profile
# dn: CA distinguished name
# subjectaltname: CA subject alt name
# validity: Validity time or end date
# policy: "null" or policy oid
# keytype: RSA, DSA or ECDSA
# keyspec: Size of RSA keys, size of DSA keys or name of curve for ECDSA keys
# signalg: Signature algorithm
# tokentype: "soft" or "org.cesecore.keys.token.PKCS11CryptoToken"
# tokenpass: Password for the CA token
# pkcs11_token: Dict of parameters needed for PKCS11 token
# slot_identifier_type: "SLOT_LABEL", "SLOT_INDEX" or "SLOT_NUMBER"
# slot_identifier_value: Slot identifier
# signkey_label: Signing key label
# defaultkey_label: Default (encryption) key label
# testkey_label: Test key label
sub_add_certification_authorities:
  - caname: "{{ organizationNameShort }}-Sub-CA"
    certprofile: "SubCA-{{ organizationNameShort }}-G1"
    dn: "CN={{ organizationName }} Issuing CA G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    rootDn: "CN={{ organizationName }} Root CA G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    subjectaltname: ""
    validity: "3650"
    validity_yml: "10y"
    policy: "null"
    keytype: "RSA"
    keyspec: "3072"
    signalg: "SHA384WithRSA"
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_subca_token_pin | default('foo123') }}"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort | lower }}-subca-g1.crl"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    crlPeriod: 259200000
    crlIssueInterval: 86400000
    useLdapDnOrder: false
    doEnforceUniqueDistinguishedName: false
    pkcs11_token:
      slot_identifier_type: "SLOT_LABEL"
      slot_identifier_value: "Sub_CA_SLOT"
      signkey_label: "signKey0001"
      defaultkey_label: "defaultKey0001"
      testkey_label: "testKey"

certification_authorities_crl_files:
  - crlfilename: "{{ organizationNameShort | lower }}-mgmtca.crl"
    cadn: "CN%3dManagementCA%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
  - crlfilename: "{{ organizationNameShort | lower }}-rootca-g1.crl"
    cadn: "CN%3d{{ organizationNameCRL }}+Root+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
  - crlfilename: "{{ organizationNameShort | lower }}-subca-g1.crl"
    cadn: "CN%3d{{ organizationNameCRL }}+Issuing+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"

disable_ejbca_protocols:
  - name: ACME
  - name: EST
  - name: OCSP
  - name: SCEP
  #- name: 'RA Web'

enable_ejbca_protocols:
  - name: Certstore
  - name: CMP
  - name: CRLstore
  - name: 'Public Web'
  - name: 'REST CA Management'
  - name: 'REST Certificate Management'
  - name: 'REST Crypto Token Management'
  - name: Webdist
  - name: 'Web Service'